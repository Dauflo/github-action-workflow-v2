name: Test CI

on:
  pull_request:
    paths:
      - '**.version'

jobs:
  check_file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
            fetch-depth: 0
      - name: Finding updated directories compared to master
        id: directories
        run: |
          echo "::set-output name=FILES::$(git diff --name-only HEAD..${{ github.event.pull_request.base.sha }} | jq -R -s -c 'split("\n")[:-1]')"
      - name: Display docker containers to build
        uses: actions/github-script@v6
        env:
          FILES: ${{ steps.directories.outputs.FILES }}
        with:
          script: |
              const fs = require('fs')

              const { FILES } = process.env

              console.log(FILES)

              const toBuild = JSON.parse(FILES).filter((file) => {
                if (file.includes('.version') && fs.existsSync(`${file.split('/')[0]}/Dockerfile`)) {
                  return file
                }
              })

              let output = ''

              if (toBuild.length === 0) {
                output = '#### No version file updated'
              } else {
                output = `#### Version files updated

                <details><summary>Show directories</summary>

                \`\`\`
                ${toBuild.map(element => {
                  const version = fs.readFileSync(element, 'utf-8')
                  const folder = element.split('/')[0]
                  return `${folder} version ${version}`
                })}
                \`\`\`

                </details>

                *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`
              }

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })